#MIN_CONFIG(3.2)

### AM_INIT_AUTOMAKE(kttsd,0.2.0)

AC_ARG_ENABLE(kttsd-gstreamer,
              AC_HELP_STRING([--enable-kttsd-gstreamer],
                             [build KTTSD GStreamer audio plugin [default=no]]),
              gstreamer_plugin=$enableval,
              gstreamer_plugin=no)

AC_ARG_ENABLE(kttsd-alsa,
              AC_HELP_STRING([--enable-kttsd-alsa],
                             [build KTTSD ALSA audio plugin [default=yes]]),
              alsa_plugin=$enableval,
              alsa_plugin=yes)

AC_ARG_ENABLE(kttsd-akode,
              AC_HELP_STRING([--enable-kttsd-akode],
                             [build KTTSD aKode audio plugin [default=no]]),
              akode_plugin=$enableval,
              akode_plugin=no)

dnl ================================================================================

dnl KDE_PKG_CHECK_MODULES(GSTUFF, gtk+-2.0 >= 1.3 glib = 1.3.4, action-if, action-not)
dnl defines GSTUFF_LIBS, GSTUFF_CFLAGS, see pkg-config man page
dnl also defines GSTUFF_PKG_ERRORS on error

AC_DEFUN([KDE_PKG_CHECK_MODULES], [
	succeeded=no

	if test -z "$PKG_CONFIG"; then
		AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
	fi

	if test "$PKG_CONFIG" = "no" ; then
		echo "*** The pkg-config script could not be found. Make sure it is"
		echo "*** in your path, or set the PKG_CONFIG environment variable"
		echo "*** to the full path to pkg-config."
		echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
	else
		PKG_CONFIG_MIN_VERSION=0.9.0
		if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
			AC_MSG_CHECKING(for $2)

			if $PKG_CONFIG --exists "$2" ; then
				AC_MSG_RESULT(yes)
				succeeded=yes

				AC_MSG_CHECKING($1_CFLAGS)
				$1_CFLAGS=`$PKG_CONFIG --cflags "$2"`
				AC_MSG_RESULT($$1_CFLAGS)

				AC_MSG_CHECKING($1_LIBS)
				$1_LIBS=`$PKG_CONFIG --libs "$2"`
				AC_MSG_RESULT($$1_LIBS)
			else
				$1_CFLAGS=""
				$1_LIBS=""
				## If we have a custom action on failure, don't print errors, but 
				## do set a variable so people can do so.
				$1_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "$2"`
				ifelse([$4], ,echo $$1_PKG_ERRORS,)
			fi

			AC_SUBST($1_CFLAGS)
			AC_SUBST($1_LIBS)
		else
			echo "*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer."
			echo "*** See http://www.freedesktop.org/software/pkgconfig"
		fi
	fi

	if test $succeeded = yes; then
		ifelse([$3], , :, [$3])
	else
		ifelse([$4], , AC_MSG_ERROR([Library requirements ($2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.]), [$4])
	fi
])


# check for pkg-config
AC_ARG_VAR(PKGCONFIGFOUND, [Path to pkg-config])
AC_CHECK_PROG(PKGCONFIGFOUND, pkg-config,[yes])

# pkg-config seems to have a bug where it masks needed -L entries when it
# shouldn't, so disable that.

PKG_CONFIG_ALLOW_SYSTEM_LIBS=1
export PKG_CONFIG_ALLOW_SYSTEM_LIBS

if test "$PKGCONFIGFOUND" = "yes" ; then
# check for GStreamer
	dnl Now we're ready to ask for gstreamer libs and cflags
	dnl And we can also ask for the right version of gstreamer
	have_gst=no

	dnl start with 0.8
	GST_MAJORMINOR=0.8
	GST_REQ=0.8.5
	KDE_PKG_CHECK_MODULES(GST, \
		gstreamer-$GST_MAJORMINOR >= $GST_REQ \
		gstreamer-control-$GST_MAJORMINOR >= $GST_REQ \
		gstreamer-libs-$GST_MAJORMINOR >= $GST_REQ,
		have_gst=yes,have_gst=no)

	dnl Give error if we don't have gstreamer
	if test "x$have_gst" = "xno"; then
		CFLAGS_GST=""
		LDADD_GST=""
		LDFLAGS_GST=""
		AC_MSG_WARN([GStreamer version >= $GST_REQ required.])
		AC_DEFINE(HAVE_GSTREAMER, 0, [have GStreamer])
	else
		CFLAGS_GST=$GST_CFLAGS
		LDADD_GST=`$PKG_CONFIG --libs-only-l gstreamer-$GST_MAJORMINOR`
		LDFLAGS_GST=`$PKG_CONFIG --libs-only-other gstreamer-$GST_MAJORMINOR`
		
        # Append -L entries, since they are masked by --libs-only-l and
        # --libs-only-other
        LIBDIRS_GST=`$PKG_CONFIG --libs-only-L gstreamer-$GST_MAJORMINOR`
        LDADD_GST="$LDADD_GST $LIBDIRS_GST"
		
		AC_SUBST(CFLAGS_GST)
		AC_SUBST(LDADD_GST)
		AC_SUBST(LDFLAGS_GST)
		AC_MSG_NOTICE([GStreamer version >= $GST_REQ found.])
		AC_DEFINE(HAVE_GSTREAMER, 1, [have GStreamer])
	fi
else
	have_gst=no
	AC_DEFINE(HAVE_GSTREAMER, 0, [have GStreamer])
	AC_MSG_WARN([No pkg-config found, required for GStreamer])
fi

AM_CONDITIONAL(include_kttsd_gstplayer, [test "x$have_gst" = "xyes" && test "x$gstreamer_plugin" = "xyes"])

dnl ================================================================================

dnl Do not compile artsplayer plugin if user specifies --without-arts

AM_CONDITIONAL(include_kttsd_artsplayer, [test "x$build_arts" = "xyes"])

dnl ================================================================================

dnl Check for ALSA library.

AC_CHECK_HEADER(alsa/asoundlib.h,
    [
    have_alsa="yes"
    ],[
    have_alsa="no"
    ])

AM_CONDITIONAL(include_kttsd_alsaplayer, [test "x$have_alsa" = "xyes" && test "x$alsa_plugin" = "xyes"])

dnl ================================================================================

dnl Check for aKode library.

KDE_CHECK_HEADERS(akode/player.h akode/decoder.h,
    [
    have_akode="yes"
    ],[
    have_akode="no"
    ])

AM_CONDITIONAL(include_kttsd_akodeplayer, [test "x$have_akode" = "xyes" && test "x$akode_plugin" = "xyes"])

dnl ================================================================================

dnl If compiling against KDE 3.4, use installed kspeech headers from kdelibs,
dnl otherwise use kttsd/compat directory.

if test "$KTTS_KSPEECH_DIR" = ""; then
    KDE_CHECK_HEADER(kspeech.h,
        [
        KTTS_KSPEECH_DIR='$(kde_includes)'
        KTTS_KSPEECH_INCLUDE=""
        KTTS_INTERFACES_DIR=""
        ],[
        KTTS_KSPEECH_DIR='$(top_srcdir)/kttsd/compat/interfaces/kspeech'
        KTTS_KSPEECH_INCLUDE='-I$(top_srcdir)/kttsd/compat/interfaces/kspeech'
        KTTS_INTERFACES_DIR="interfaces"
        ])
    AC_SUBST(KTTS_KSPEECH_DIR)
    AC_SUBST(KTTS_KSPEECH_INCLUDE)
    AC_SUBST(KTTS_INTERFACES_DIR)
fi

dnl ================================================================================

# --- Check for KDE < 3.5 ---
# If so, install icons.

AC_MSG_CHECKING([for KDE version])

AC_LANG_SAVE
AC_LANG_CPLUSPLUS
kdeversion_save_CXXFLAGS="$CXXFLAGS"
kdeversion_save_LIBS="$LIBS"
LIBS="$LIBS $X_EXTRA_LIBS"
CXXFLAGS="$CXXFLAGS $all_includes"

AC_COMPILE_IFELSE([
#include <kdeversion.h>
#if ! ( KDE_IS_VERSION( 3, 4, 90 ) )
#error KDE 3.4
#endif
],
    KTTS_ICONS_DIR=""
,
    KTTS_ICONS_DIR="icons"
)

CXXFLAGS="$kdeversion_save_CXXFLAGS"
LIBS="$kdeversion_save_LIBS"
AC_LANG_RESTORE

if test "$KTTS_ICONS_DIR" = ""; then
    AC_MSG_RESULT([KDE 3.4.x or less])
else
    AC_MSG_RESULT([KDE 3.5 or later])
fi

AC_SUBST(KTTS_ICONS_DIR)

