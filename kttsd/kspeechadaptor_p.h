/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a kspeechadaptor -p kspeechinterface -- org.kde.KSpeech.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */
 
// HAND-EDIT: QDBUSMESSAGE arguments added so that dbus sender can be passed
// to kttsd for those methods that require an appId.

#ifndef KSPEECHADAPTOR_H_70821151966344
#define KSPEECHADAPTOR_H_70821151966344

#include <QtCore/QObject>
#include <QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;

/*
 * Adaptor class for interface org.kde.KSpeech
 */
class KSpeechAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.KSpeech")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.KSpeech\" >\n"
"    <property access=\"read\" type=\"s\" name=\"version\" />\n"
"    <property access=\"read\" type=\"b\" name=\"isSpeaking\" />\n"
"    <method name=\"applicationName\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"setApplicationName\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"applicationName\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"defaultTalker\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"setDefaultTalker\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"defaultTalker\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"defaultPriority\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"setDefaultPriority\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"defaultPriority\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"sentenceDelimiter\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"setSentenceDelimiter\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"sentenceDelimiter\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"filteringOn\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setFilteringOn\" >\n"
"      <arg direction=\"in\" type=\"b\" name=\"filteringOn\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"autoConfigureTalkersOn\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setAutoConfigureTalkersOn\" >\n"
"      <arg direction=\"in\" type=\"b\" name=\"autoConfigureTalkersOn\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"isApplicationPaused\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"htmlFilterXsltFile\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"setHtmlFilterXsltFile\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"htmlFilterXsltFile\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"ssmlFilterXsltFile\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"setSsmlFilterXsltFile\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"ssmlFilterXsltFile\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"isSystemManager\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setIsSystemManager\" >\n"
"      <arg direction=\"in\" type=\"b\" name=\"isSystemManager\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"say\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"text\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"options\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"sayFile\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"filename\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"encoding\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"sayClipboard\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"pause\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"resume\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"removeJob\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"jobNum\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"removeAllJobs\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"getSentenceCount\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"jobNum\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"getCurrentJob\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"getJobCount\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"priority\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"getJobNumbers\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"priority\" />\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"    </method>\n"
"    <method name=\"getJobState\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"jobNum\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"getJobInfo\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"jobNum\" />\n"
"      <arg direction=\"out\" type=\"ay\" />\n"
"    </method>\n"
"    <method name=\"getJobSentence\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"jobNum\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"sentenceNum\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"getTalkerCodes\" >\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"    </method>\n"
"    <method name=\"talkerToTalkerId\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"talker\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"getTalkerCapabilities1\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"talker\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"getTalkerCapabilities2\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"talker\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"getTalkerVoices\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"talker\" />\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"    </method>\n"
"    <method name=\"changeJobTalker\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"jobNum\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"talker\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"moveJobLater\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"jobNum\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"moveRelSentence\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"jobNum\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"n\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"showManagerDialog\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"kttsdExit\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"reinit\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <signal name=\"kttsdStarted\" />\n"
"    <signal name=\"kttsdExiting\" />\n"
"    <signal name=\"jobStateChanged\" >\n"
"      <arg type=\"s\" name=\"appId\" />\n"
"      <arg type=\"i\" name=\"jobNum\" />\n"
"      <arg type=\"i\" name=\"state\" />\n"
"    </signal>\n"
"    <signal name=\"marker\" >\n"
"      <arg type=\"s\" name=\"appId\" />\n"
"      <arg type=\"i\" name=\"jobNum\" />\n"
"      <arg type=\"i\" name=\"markerType\" />\n"
"      <arg type=\"s\" name=\"markerData\" />\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    KSpeechAdaptor(QObject *parent);
    virtual ~KSpeechAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool isSpeaking READ isSpeaking)
    bool isSpeaking() const;

    Q_PROPERTY(QString version READ version)
    QString version() const;

public Q_SLOTS: // METHODS
    QString applicationName(const QDBusMessage &msg);
    bool autoConfigureTalkersOn(const QDBusMessage &msg);
    Q_NOREPLY void changeJobTalker(int jobNum, const QString &talker);
    int defaultPriority(const QDBusMessage &msg);
    QString defaultTalker(const QDBusMessage &msg);
    bool filteringOn(const QDBusMessage &msg);
    int getCurrentJob();
    int getJobCount(int priority, const QDBusMessage &msg);
    QByteArray getJobInfo(int jobNum);
    QStringList getJobNumbers(int priority, const QDBusMessage &msg);
    QString getJobSentence(int jobNum, int sentenceNum);
    int getJobState(int jobNum);
    int getSentenceCount(int jobNum);
    int getTalkerCapabilities1(const QString &talker);
    int getTalkerCapabilities2(const QString &talker);
    QStringList getTalkerCodes();
    QStringList getTalkerVoices(const QString &talker);
    QString htmlFilterXsltFile(const QDBusMessage &msg);
    bool isApplicationPaused(const QDBusMessage &msg);
    bool isSystemManager(const QDBusMessage &msg);
    Q_NOREPLY void kttsdExit();
    Q_NOREPLY void moveJobLater(int jobNum);
    int moveRelSentence(int jobNum, int n);
    Q_NOREPLY void pause(const QDBusMessage &msg);
    Q_NOREPLY void reinit();
    Q_NOREPLY void removeAllJobs(const QDBusMessage &msg);
    Q_NOREPLY void removeJob(int jobNum);
    Q_NOREPLY void resume(const QDBusMessage &msg);
    int say(const QString &text, int options, const QDBusMessage &msg);
    int sayClipboard(const QDBusMessage &msg);
    int sayFile(const QString &filename, const QString &encoding, const QDBusMessage &msg);
    QString sentenceDelimiter(const QDBusMessage &msg);
    Q_NOREPLY void setApplicationName(const QString &applicationName, const QDBusMessage &msg);
    Q_NOREPLY void setAutoConfigureTalkersOn(bool autoConfigureTalkersOn, const QDBusMessage &msg);
    Q_NOREPLY void setDefaultPriority(int defaultPriority, const QDBusMessage &msg);
    Q_NOREPLY void setDefaultTalker(const QString &defaultTalker, const QDBusMessage &msg);
    Q_NOREPLY void setFilteringOn(bool filteringOn, const QDBusMessage &msg);
    Q_NOREPLY void setHtmlFilterXsltFile(const QString &htmlFilterXsltFile, const QDBusMessage &msg);
    Q_NOREPLY void setIsSystemManager(bool isSystemManager, const QDBusMessage &msg);
    Q_NOREPLY void setSentenceDelimiter(const QString &sentenceDelimiter, const QDBusMessage &msg);
    Q_NOREPLY void setSsmlFilterXsltFile(const QString &ssmlFilterXsltFile, const QDBusMessage &msg);
    Q_NOREPLY void showManagerDialog();
    QString ssmlFilterXsltFile(const QDBusMessage &msg);
    QString talkerToTalkerId(const QString &talker);
Q_SIGNALS: // SIGNALS
    void jobStateChanged(const QString &appId, int jobNum, int state);
    void kttsdExiting();
    void kttsdStarted();
    void marker(const QString &appId, int jobNum, int markerType, const QString &markerData);
};

#endif
